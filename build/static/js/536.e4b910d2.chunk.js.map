{"version":3,"file":"static/js/536.e4b910d2.chunk.js","mappings":"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","sources":["components/atoms/Heading2/Heading2.tsx","components/containers/AnimatedPage/AnimatedPage.tsx","components/molecules/Footer/Footer.tsx","components/organisms/DateFilter/DateFilter.tsx","data/ivf-academy/index.ts","data/ivf-academy/day1a.ts","data/ivf-academy/day2a.ts","data/ivf-academy/day2b.ts","data/ivf-academy/day3a.ts","data/ivf-academy/day4a.ts","components/organisms/IVFAcademyListGroup/IVFAcademyListGroup.tsx","components/pages/IVFAcademyPage/IVFAcademyPage.tsx"],"sourcesContent":["export default function Heading2({ title }: { title: string }) {\r\n  return (\r\n    <h2 className=\"mb-7 mt-7 text-center font-primary text-3xl font-semibold text-ivfPurple\">\r\n      {title}\r\n    </h2>\r\n  );\r\n}\r\n","import { motion } from 'framer-motion';\r\nimport { ReactNode } from 'react';\r\n\r\nconst animations = {\r\n  initial: { opacity: 0.5, x: 50 },\r\n  animate: { opacity: 1, x: 0 },\r\n  exit: { opacity: 0.5, x: -50 },\r\n};\r\n\r\nfunction AnimatedPage({ children }: { children: ReactNode }) {\r\n  return (\r\n    <motion.div\r\n      variants={animations}\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default AnimatedPage;\r\n","const socials = [\r\n  {\r\n    id: 1,\r\n    link: 'https://facebook.com',\r\n    name: 'facebook',\r\n  },\r\n  {\r\n    id: 2,\r\n    link: 'https://twitter.com',\r\n    name: 'twitter',\r\n  },\r\n  {\r\n    id: 3,\r\n    link: 'https://instagram.com',\r\n    name: 'instagram',\r\n  },\r\n  {\r\n    id: 4,\r\n    link: 'https://whatsapp.com',\r\n    name: 'whatsapp',\r\n  },\r\n];\r\n\r\nconst year = new Date().getFullYear();\r\n\r\ninterface Props {\r\n  isEmployer?: boolean;\r\n}\r\n\r\nexport default function Footer(props: Props) {\r\n  const { isEmployer } = props;\r\n  return (\r\n    <>\r\n      <footer className=\"mt-10 flex flex-col justify-between overflow-x-hidden rounded-t-xl bg-jobfairYellow-2 p-6 font-primary lg:rounded-t-3xl xl:bg-jobfairBlue-2 lg:p-12 xl:flex-row\">\r\n        <div className=\"flex flex-col gap-5 lg:flex-row\">\r\n          <div className=\"flex gap-3\">\r\n            <img src=\"/img/logos/logo-ipb.png\" alt=\"logo ipb\" className=\"h-20 w-20 md:h-28 md:w-28\" />\r\n            <img src=\"/img/logos/logo-cda.png\" alt=\"logo cda\" className=\"h-20 md:h-28\" />\r\n          </div>\r\n          <div className=\"text-white\">\r\n            <p>Gedung Andi Hakim Nasoetion Lt. 1 Kampus IPB Dramaga</p>\r\n            <p>Kabupaten Bogor Jawa Barat 16680</p>\r\n            <p>0251-8423507</p>\r\n            <p>cda@apps.ipb.ac.id (Jobseeker)</p>\r\n            <p>cdaipb@apps.ipb.ac.id (Companies)</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ul className=\"mt-3 flex gap-3 xl:mt-0\">\r\n            {socials.map((social) => (\r\n              <li key={social.id}>\r\n                <a href={social.link} className=\"text-4xl text-white hover:text-white/75\">\r\n                  <i className={`bi bi-${social.name}`} />\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n      <div className=\"flex justify-center gap-1 bg-jobfairYellow-2 p-2 text-center text-white xl:bg-jobfairBlue-2\">\r\n        <span>Â© Copyright</span>\r\n        <span>{year}</span>\r\n        <span>CDA IPB. All Rights Reserved.</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import Button from '../../atoms/Button';\r\nimport DateEasyRead from '../../atoms/DateEasyRead/DateEasyRead';\r\n\r\ninterface IDateFilterProps {\r\n  availableDates: string[];\r\n  activeFilter: string;\r\n  setActiveFilter: (date: string) => void;\r\n}\r\n\r\nexport default function DateFilter(props: IDateFilterProps) {\r\n  const { availableDates, activeFilter, setActiveFilter } = props;\r\n  return (\r\n    <section className=\"mb-5 px-6 lg:px-24\">\r\n      <div className=\"flex flex-wrap gap-3 overflow-auto\">\r\n        {availableDates.map((date) => (\r\n          <Button\r\n            key={Math.random()}\r\n            onClick={() => setActiveFilter(date)}\r\n            display=\"block\"\r\n            color={activeFilter === date ? 'primary' : 'transparent'}\r\n            className={`${\r\n              activeFilter === date ? 'text-white' : 'border-jobfairBlue-1 text-jobfairBlue-1 border'\r\n            } flex-shrink-0`}\r\n          >\r\n            <DateEasyRead date={date} noNeedTime />\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { IWebinarCard } from '../../interfaces';\r\nimport day1a from './day1a';\r\nimport day2a from './day2a';\r\nimport day2b from './day2b';\r\nimport day3a from './day3a';\r\nimport day4a from './day4a';\r\nimport dummyIvfAcademy from './dummy';\r\n\r\nconst ivfAcademyData: IWebinarCard[] = [\r\n  day1a,\r\n  day2a,\r\n  day2b,\r\n  day3a,\r\n  day4a\r\n];\r\n\r\nexport default ivfAcademyData;\r\n","import { IWebinarCard } from '../../interfaces';\r\n\r\nexport const randomDateGenerator = () => {\r\n  const date = new Date();\r\n  date.setDate(date.getDate() + Math.floor(Math.random() * 30));\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toLocaleString('en-US', {\r\n    minimumIntegerDigits: 2,\r\n  });\r\n  const day = date\r\n    .getDate()\r\n    .toLocaleString('en-US', { minimumIntegerDigits: 2 });\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst day1a: IWebinarCard = {\r\n  id: Math.random() * Math.random(),\r\n  date: '2022-10-17',\r\n  time: '09.00 - 13.00',\r\n  link: 'https://cda.ipb.ac.id/eventlist/site/view/91',\r\n  title: 'Personal Understanding, target karir & Personal Branding Media Sosial',\r\n  location: 'Zoom',\r\n  speaker: {\r\n    name: 'Nur Fajri Rahmawati dan Yusuf Bachtiar',\r\n    photo: '/img/logos/logo-cda.png',\r\n    profession:\r\n      '',\r\n    company: 'CDA IPB',\r\n  },\r\n  closed: true,\r\n};\r\nexport default day1a;\r\n","import { IWebinarCard } from '../../interfaces';\r\n\r\nexport const randomDateGenerator = () => {\r\n  const date = new Date();\r\n  date.setDate(date.getDate() + Math.floor(Math.random() * 30));\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toLocaleString('en-US', {\r\n    minimumIntegerDigits: 2,\r\n  });\r\n  const day = date\r\n    .getDate()\r\n    .toLocaleString('en-US', { minimumIntegerDigits: 2 });\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst day2a: IWebinarCard = {\r\n  id: Math.random() * Math.random(),\r\n  date: '2022-10-18',\r\n  time: '09.00 - 13.00',\r\n  link: 'https://cda.ipb.ac.id/eventlist/site/view/91',\r\n  title: 'CV, Interview dan FGD',\r\n  location: 'Zoom',\r\n  speaker: {\r\n    name: 'Nur Fajri Rahmawati',\r\n    photo: '/img/logos/logo-cda.png',\r\n    profession:\r\n      '',\r\n    company: 'CDA IPB',\r\n  },\r\n  closed: true,\r\n};\r\nexport default day2a;\r\n","import { IWebinarCard } from '../../interfaces';\r\n\r\nexport const randomDateGenerator = () => {\r\n  const date = new Date();\r\n  date.setDate(date.getDate() + Math.floor(Math.random() * 30));\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toLocaleString('en-US', {\r\n    minimumIntegerDigits: 2,\r\n  });\r\n  const day = date\r\n    .getDate()\r\n    .toLocaleString('en-US', { minimumIntegerDigits: 2 });\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst day2b: IWebinarCard = {\r\n  id: Math.random() * Math.random(),\r\n  date: '2022-10-19',\r\n  time: '19.30 - 21.00',\r\n  link: 'https://cda.ipb.ac.id/eventlist/site/view/91',\r\n  title: 'Management Trainee',\r\n  location: 'Zoom',\r\n  speaker: {\r\n    name: 'Aditiyo Indrasanto',\r\n    photo: '/img/logos/sekolah-karir.png',\r\n    profession:\r\n      'Founder Komunitas Sekolah Karir, Ex Profesional Multinational Company',\r\n    company: 'Sekolah Karir',\r\n  },\r\n  closed: true,\r\n};\r\nexport default day2b;\r\n","import { IWebinarCard } from '../../interfaces';\r\n\r\nexport const randomDateGenerator = () => {\r\n  const date = new Date();\r\n  date.setDate(date.getDate() + Math.floor(Math.random() * 30));\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toLocaleString('en-US', {\r\n    minimumIntegerDigits: 2,\r\n  });\r\n  const day = date\r\n    .getDate()\r\n    .toLocaleString('en-US', { minimumIntegerDigits: 2 });\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst day3a: IWebinarCard = {\r\n  id: Math.random() * Math.random(),\r\n  date: '2022-10-24',\r\n  time: '09.00 - 11.30',\r\n  link: 'https://cda.ipb.ac.id/eventlist/site/view/91',\r\n  title: 'Seni Wawancara Kerja & Menghadapi FGD & LGD (sesi dengan simulasi langsung)',\r\n  location: 'Zoom',\r\n  speaker: {\r\n    name: 'Aditiyo Indrasanto',\r\n    photo: '/img/logos/sekolah-karir.png',\r\n    profession:\r\n      'Founder Komunitas Sekolah Karir, Ex Profesional Multinational Company',\r\n    company: 'Sekolah Karir',\r\n  },\r\n};\r\nexport default day3a;\r\n","import { IWebinarCard } from '../../interfaces';\r\n\r\nexport const randomDateGenerator = () => {\r\n  const date = new Date();\r\n  date.setDate(date.getDate() + Math.floor(Math.random() * 30));\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toLocaleString('en-US', {\r\n    minimumIntegerDigits: 2,\r\n  });\r\n  const day = date\r\n    .getDate()\r\n    .toLocaleString('en-US', { minimumIntegerDigits: 2 });\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst day4a: IWebinarCard = {\r\n  id: Math.random() * Math.random(),\r\n  date: '2022-10-30',\r\n  time: '09:00 - 12:00',\r\n  link: 'https://cda.ipb.ac.id/eventlist/site/view/92',\r\n  title: 'TRAINING DAN PSIKOTEST EKRUTEST.ID',\r\n  location: 'Kampus Pascasarjana Baranangsiang, Ruangan BSB 01 - BSB 03',\r\n  speaker: {\r\n    name: '',\r\n    photo: 'img/logos/ekrutes.png',\r\n    profession: '',\r\n    company: '',\r\n  },\r\n  closed: true,\r\n};\r\nexport default day4a;\r\n","import { IWebinarCard } from '../../../interfaces';\r\nimport IVFWebinarCard from '../../molecules/IVFWebinarCard/IVFWebinarCard';\r\n\r\ninterface Props {\r\n  webinarList: IWebinarCard[];\r\n  activeFilter: string;\r\n}\r\n\r\nexport default function IVFAcademyListGroup(props: Props) {\r\n  const { activeFilter, webinarList } = props;\r\n  const filteredFinal = webinarList.filter(\r\n    (item) => item.date === activeFilter\r\n  );\r\n\r\n  return (\r\n    <section className=\"px-6 lg:px-24\">\r\n      <div className=\"mt-3 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n        {filteredFinal.map((webinar) => (\r\n          <IVFWebinarCard\r\n            key={webinar.id * Math.random()}\r\n            ctaColor=\"primary\"\r\n            webinarCard={webinar}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport ivfAcademyData from '../../../data/ivf-academy';\r\nimport { titlePageGenerator } from '../../../utils';\r\nimport Gap from '../../atoms/Gap/Gap';\r\nimport Heading2 from '../../atoms/Heading2/Heading2';\r\nimport TawkToWrapper from '../../atoms/TawkToWrapper/TawkToWrapper';\r\nimport AnimatedPage from '../../containers/AnimatedPage/AnimatedPage';\r\nimport Footer from '../../molecules/Footer/Footer';\r\nimport Header from '../../molecules/Header/Header';\r\nimport DateFilter from '../../organisms/DateFilter/DateFilter';\r\nimport IVFAcademyListGroup from '../../organisms/IVFAcademyListGroup/IVFAcademyListGroup';\r\n\r\nfunction IVFAcademyPage() {\r\n  const filterDates = ivfAcademyData.map((item) => item.date);\r\n  const availableDates = [...new Set(filterDates)].sort();\r\n  const [activeFilter, setActiveFilter] = useState(availableDates[0] || '');\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{titlePageGenerator('IJF Academy')}</title>\r\n      </Helmet>\r\n      <Header active=\"/ijf-academy\" />\r\n      <TawkToWrapper />\r\n      <main>\r\n        <AnimatedPage>\r\n          <Gap className=\"h-6\" />\r\n          <Heading2 title=\"IJF Thematic Academy\" />\r\n          <DateFilter\r\n            activeFilter={activeFilter}\r\n            availableDates={availableDates}\r\n            setActiveFilter={setActiveFilter}\r\n          />\r\n          <IVFAcademyListGroup\r\n            activeFilter={activeFilter}\r\n            webinarList={ivfAcademyData}\r\n          />\r\n        </AnimatedPage>\r\n        <Footer isEmployer={false} />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IVFAcademyPage;\r\n"],"names":["Heading2","title","className","animations","initial","opacity","x","animate","exit","children","variants","transition","duration","socials","id","link","name","year","Date","getFullYear","Footer","props","isEmployer","src","alt","map","social","href","DateFilter","availableDates","activeFilter","setActiveFilter","date","onClick","display","color","noNeedTime","Math","random","time","location","speaker","photo","profession","company","closed","IVFAcademyListGroup","filteredFinal","webinarList","filter","item","webinar","IVFWebinarCard","ctaColor","webinarCard","filterDates","ivfAcademyData","Set","sort","useState","Helmet","titlePageGenerator","Header","active","TawkToWrapper","AnimatedPage","Gap"],"sourceRoot":""}